name: Continuous Integration and Delivery

on:
  workflow_call:
  workflow_dispatch:

jobs:
  detect-secrets:
    runs-on: ubuntu-24.04
    outputs:
      secrets_available: ${{ steps.check-secrets.outputs.secrets_available }}
    steps:
      - name: Check if e2e testing secrets are available
        id: check-secrets
        run: |
          SECRETS='${{ toJson(secrets) }}'
          REQUIRED_SECRETS=("FIREBASE_SERVICE_ACCOUNT" "FIREBASE_CONFIG" "MAPBOX_API_KEY" "AKKA_LICENSE_KEY")          
          for SECRET in "${REQUIRED_SECRETS[@]}"; do
            if ! echo "$SECRETS" | jq -e "has(\"$SECRET\")" > /dev/null 2>&1; then
              echo "Secret $SECRET is missing. No integration tests will be run."
              echo "secrets_available=false" >> $GITHUB_OUTPUT
              exit 0
            fi
          done
          echo "All integration tests secrets are available."
          echo "secrets_available=true" >> $GITHUB_OUTPUT
      - name: Fail if no secrets are available and is not a pull request
        if: >-
          ${{ steps.check-secrets.outputs.secrets_available == 'false' 
            && !github.event.repository.fork 
            && github.event_name != 'pull_request'
          }}
        run: "false"

  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        node-version: [22.x, 23.x]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
      - name: Set up Node ${{ matrix.jvm-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Unit test
        run: npm run test:jest
      - name: Lint
        run: npx eslint .

  e2e-tests:
    strategy:
      matrix:
        os: [ubuntu-22.04] # Tests need docker to run, that is not available on macOS and Windows ouch!
        node-version: [22.x, 23.x]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    needs:
      - detect-secrets
      - build
    if: ${{ needs.detect-secrets.outputs.secrets_available == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Setup firebase service account secret
        uses: mobiledevops/secret-to-file-action@be5f14e82c235ccde011f6ab0f6c984b35dc34c6 # v1
        with:
          base64-encoded-secret: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          filename: service-account.json
          working-directory: ./tests/resources/local-deployment/secrets
      - name: Setup firebase-config secret
        uses: mobiledevops/secret-to-file-action@be5f14e82c235ccde011f6ab0f6c984b35dc34c6 # v1
        with:
          base64-encoded-secret: ${{ secrets.FIREBASE_CONFIG }}
          filename: firebase-config.json
          working-directory: ./tests/resources/mocked-client-app
      - name: End2End Test
        env:
          MAPBOX_API_KEY: ${{ secrets.MAPBOX_API_KEY }}
          AKKA_LICENSE_KEY: ${{ secrets.AKKA_LICENSE_KEY }}
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3
        with:
          max_attempts: 2
          retry_on: error
          timeout_minutes: 30
          command: npm run test:cucumber
      - name: Upload test reports
        if: ${{ contains(matrix.os, 'ubuntu') && matrix.node-version == '23.x' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-reports
          path: reports/
          if-no-files-found: error

  dry-delivery:
    needs:
      - build
      - e2e-tests
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3
      - name: Build multi-platform dockerfile
        run: docker buildx build --platform linux/amd64,linux/arm64 .

  release:
    needs: dry-delivery
    if: github.ref_name == github.event.repository.default_branch && !github.event.repository.fork
    permissions: # Not specified scopes are set to `none`!
      packages: write
      contents: write
      issues: write
      pull-requests: write
    concurrency:
      group: release-and-delivery-${{ github.event.number || github.ref }}
    runs-on: ubuntu-24.04
    outputs: # see release.config.js
      release-status: ${{ env.RELEASE_STATUS }}
      release_version: ${{ env.RELEASE_VERSION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive
          fetch-depth: 0
          fetch-tags: true
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - name: Release
        run: |
          npm install
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.POSITION_PAL_BOT_TOKEN }}

  publish-images:
    needs:
      - release
    # Trigger this job only if the semantic release bot has released a new version
    if: ${{ needs.release.outputs.release-status == 'released' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@18ce135bb5112fa8ce4ed6c17ab05699d7f3a5e0 # v3
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.release.outputs.release_version }}

  publish-doc:
    needs:
      - release
    # Trigger this job only if the semantic release bot has released a new version
    if: ${{ needs.release.outputs.release-status == 'released' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          ref: ${{ needs.release.outputs.release_version }}
          fetch-tags: true
      - name: Download e2e test reports
        uses: dawidd6/action-download-artifact@ac66b43f0e6a346234dd65d4d0c8fbb31cb316e5 # v11
        with:
          workflow: dispatcher.yml
          workflow_conclusion: in_progress
          commit: ${{ github.sha }}
          name: test-reports
          path: docs/reports/
      - name: Set up Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: 23.x
      - name: Install dependencies
        run: npm install
      - name: Generate swagger API
        run: npm run generate-swagger-doc
      - name: Generate swagger UI
        uses: Legion2/swagger-ui-action@eff65dc3f193f0a749872be82f74baa35be0797d # v1
        with:
          output: docs/swagger-ui
          spec-file: ./swagger-output.json
          GITHUB_TOKEN: ${{ secrets.POSITION_PAL_BOT_TOKEN }}
      - name: Publish on Github pages
        uses: JamesIves/github-pages-deploy-action@6c2d9db40f9296374acc17b90404b6e8864128c8 # v4
        with:
          folder: docs/

  success:
    needs:
      - build
      - e2e-tests
      - dry-delivery
      - release
      - publish-images
      - publish-doc
    if:
      >- # run if at least one needed job has failed or all needed jobs have not been cancelled
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    runs-on: ubuntu-24.04
    steps:
      - name: Verify no failures occurred in needed jobs
        # if there are failures, false is executed and the job fails.
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
